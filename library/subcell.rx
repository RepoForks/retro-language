chain: subcell'

: highWord ( cellAddr -- highwordAddr )
   2 * ;

: lowWord  ( cellAddr -- lowwordAddr  )
   2 * 1+ ;

: w@ ( wordAddr -- val )
   2 /mod  @ swap [ 16 >> ] ifFalse $FFFF and ;

: w@+ ( wordAddr -- wordAddr val )
  [ 1+ ] [ w@ ] bi ;

: w! ( val wordAddr -- )
   2 /mod dup push swap
   [ @ $FFFF0000 and + ]
   [ @ $0000FFFF and swap 16 << + ]
   if pop ! ;

: w!+ ( val wordAddr -- wordAddr+1 )
   [ w! ] [ 1+ ] bi ;

: highByte ( wordAddr -- highbyteAddr )
   2 * ;

: lowByte  ( wordAddr -- lowbyteAddr  )
   2 * 1+ ;

: c@ ( byteAddr -- val )
   2 /mod w@ swap [ 8 >> ] ifFalse $FF and ;

: c@+ ( byteAddr -- byteAddr val )
  [ 1+ ] [ c@ ] bi ;

: c! ( val byteaddr -- )
  2 /mod dup push swap
  [ w@ $FF00 and + ]
  [ w@ $00FF and swap 8 << + ]
  if pop w! ;

: c!+ ( val byteAddr -- byteAddr+1 )
   [ c! ] [ 1+ ] bi ;

: packString ( strAddr -- )
    dup highWord highByte
    [ repeat push @+ pop swap 0; 
    swap c!+ again ]
    do 0 swap c! drop ;

: printPack ( strAddr -- )
    highWord highByte
    [ repeat c@+ 0; putc again ]
    do drop ;

: getPackedLength ( strAddr -- strLen )
    highWord highByte 0 swap 
    [ repeat c@+ 0; drop swap 1+ swap again ]
    do drop ;
;chain


doc{
========
subcell'
========


--------
Overview
--------
This library provides functions for accessing 16-bit and 8-bit subsets of cells.


---------
Functions
---------

+-----------------+-----------------------------+
| Function        | Stack                       |
+=================+=============================+
| highWord        | cellAddr -- highwordAddr    |
+-----------------+-----------------------------+
| lowWord         | cellAddr -- lowwordAddr     |
+-----------------+-----------------------------+
| w@              | wordAddr -- val             |
+-----------------+-----------------------------+
| w@+             | wordAddr -- wordAddr val    |
+-----------------+-----------------------------+
| w!              | val wordAddr --             |
+-----------------+-----------------------------+
| w!+             | val wordAddr -- wordAddr+1  |
+-----------------+-----------------------------+
| highByte        | wordAddr -- highbyteAddr    |
+-----------------+-----------------------------+
| lowByte         | wordAddr -- lowbyteAddr     |
+-----------------+-----------------------------+
| c@              | byteAddr -- val             |
+-----------------+-----------------------------+
| c@+             | byteAddr -- byteAddr val    |
+-----------------+-----------------------------+
| c!              | val byteaddr --             |
+-----------------+-----------------------------+
| c!+             | val byteAddr -- byteAddr+1  |
+-----------------+-----------------------------+
| packString      | strAddr --                  |
+-----------------+-----------------------------+
| printPack       | strAddr --                  |
+-----------------+-----------------------------+
| getPackedLength | strAddr -- strLen           |
+-----------------+-----------------------------+


}doc

